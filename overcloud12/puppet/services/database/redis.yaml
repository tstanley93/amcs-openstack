heat_template_version: pike

description: >
  OpenStack Redis service configured with Puppet

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json

resources:
  RedisBase:
    type: ./redis-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the redis role.
    value:
      service_name: redis
      config_settings:
        map_merge:
          - get_attr: [RedisBase, role_data, config_settings]
          - tripleo.redis.firewall_rules:
              '108 redis':
                dport:
                  - 6379
                  - 26379
      step_config: |
        include ::tripleo::profile::base::database::redis
      upgrade_tasks:
        - name: Check if redis is deployed
          command: systemctl is-enabled redis
          tags: common
          ignore_errors: True
          register: redis_enabled
        - name: "PreUpgrade step0,validation: Check if redis is running"
          shell: >
            /usr/bin/systemctl show 'redis' --property ActiveState |
            grep '\bactive\b'
          when: redis_enabled.rc == 0
          tags: step0,validation
        - name: Stop redis service
          tags: step1
          when: redis_enabled.rc == 0
          service: name=redis state=stopped
        - name: Install redis package if it was disabled
          tags: step3
          yum: name=redis state=latest
          when: redis_enabled.rc != 0
        - name: Start redis service
          tags: step4
          service: name=redis state=started
